[{"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\index.js":"1","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\TopNavigation.js":"2","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\App.js":"3","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\reportWebVitals.js":"4","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\serviceWorker.js":"5","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\PopularGames.js":"6","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\CardGames.js":"7","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\Welcome.js":"8"},{"size":898,"mtime":1619074460705,"results":"9","hashOfConfig":"10"},{"size":858,"mtime":1619311360054,"results":"11","hashOfConfig":"10"},{"size":612,"mtime":1619315345918,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"10"},{"size":5481,"mtime":1619075003960,"results":"14","hashOfConfig":"10"},{"size":9339,"mtime":1619317152906,"results":"15","hashOfConfig":"10"},{"size":8110,"mtime":1619307293528,"results":"16","hashOfConfig":"10"},{"size":1001,"mtime":1619314446237,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"117wau4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\index.js",[],"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\TopNavigation.js",["36"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './css/cardStyles.css'\r\nimport { Container, Navbar } from 'react-bootstrap'\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport logo from './assets/images/chaoticneutralgameslogo.png'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TopNavigation() {\r\n \r\n\r\nreturn (\r\n  \r\n  <div>\r\n   \r\n   <Container className=\"nav-container\">\r\n  <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n  <NavLink activeClassName=\"activeLink\" to ='/' className=\"navLink\">Chaotic Neutral Games</NavLink>\r\n  <NavLink activeClassName=\"activeLink\" to=\"/populargames\" className=\"navLink\">Popular Games</NavLink>\r\n      <NavLink activeClassName=\"activeLink\" to=\"/cardgames\" className=\"navLink\">Card Games</NavLink>\r\n  </Navbar>\r\n</Container>\r\n   \r\n   \r\n    </div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default TopNavigation; \r\n  ","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\App.js",[],"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\serviceWorker.js",[],"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\PopularGames.js",["37"],"import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\nimport {Card, IconButton, CardMedia, Typography, Container, \r\n    Dialog, Button, DialogTitle, DialogContent, DialogContentText, \r\n    DialogActions, TextField, Box, CardContent} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleIcon from '@material-ui/icons/Add';\r\n//import LazyLoad from 'react-lazyload'\r\nimport './css/cardStyles.css'\r\nimport { Formik } from 'formik' \r\nimport * as Yup from 'yup'\r\n\r\n\r\n//const PORT = process.env.PORT || 3000\r\n\r\n\r\n/* \r\nconst Loading = () => (\r\n<div>\r\n<h4>Loading...</h4>\r\n\r\n</div>\r\n\r\n\r\n)\r\n\r\n */\r\n\r\nconst PopularGames = () => {\r\n\r\nconst [selectedCard, setSelectedCard] = useState( { name: ''})\r\nconst [deckData, setDeckData] = useState([])\r\nconst [debouncedName, setDebouncedName] = useState('')\r\nconst [editOpen, setEditOpen] = useState(false)\r\nconst [deleteOpen, setDeleteOpen] = useState(false)\r\n//const url = `https://crud-node-backend-app.herokuapp.com/card`\r\n\r\n\r\n\r\n\r\nconst handleInput = (event) => {\r\n    debounce(event.target.value)\r\n}\r\n\r\n\r\n    const debounce = useCallback(\r\n        _.debounce((searchVal) => {\r\n            setDebouncedName(searchVal)\r\n        }, 1000), \r\n        [],\r\n    )\r\n\r\n    \r\n\r\n\r\n    const handleSearch = () => {\r\n        if (debouncedName) {\r\n            setDeckData(deckData.filter(game => game.name.includes(debouncedName)))\r\n        } else {\r\n            fetchCards()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleClickEditOpen = (game) => {\r\n        setSelectedCard(game.game) \r\n        setEditOpen(true)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEditOpen(false)\r\n    }\r\n    \r\nconst handleUpdate = async (values) => {\r\n    try {\r\n        const result = await axios.put(`http://localhost:5050/populargames/update`, {\r\n            data: {\r\n                cardId: values._id,\r\n                name: values.name, \r\n                image_url: values.image_url, \r\n                description: values.description, \r\n                price: values.price\r\n            },\r\n        })\r\n        if (result.status === 200) {\r\n            fetchCards()\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\nconst handleClickDeleteOpen = (game) => {\r\n    console.log('You clicked to delete')\r\n    console.log(game._id)\r\n    setSelectedCard(game.game)\r\n    setDeleteOpen(true)\r\n}\r\n\r\nconst handleCloseDelete = () => {\r\n    setDeleteOpen(false)\r\n}\r\n\r\nconst handleDelete = async () => {\r\n    setDeleteOpen(false)\r\n    console.log(selectedCard._id)\r\n    try {\r\n        await axios.delete(`http://localhost:5050/populargames/delete`, { \r\n        data: {   \r\n        cardId: selectedCard._id\r\n        }\r\n    })\r\n    fetchCards()\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst fetchCards = async () => {\r\n    try {\r\n    const populargames = await axios.get(`http://localhost:5050/populargames`)\r\n    setDeckData(populargames.data)\r\n    console.log(populargames.data)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetchCards()\r\n       \r\n    }, [])\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div className=\"main-1\">\r\n     <h1 className=\"gamesHeader\"> Popular Games</h1>\r\n     <div></div>\r\n     <form className=\"gamestatsSearch\">\r\n         <TextField placeholder='Search' onChange={handleInput} />\r\n         <IconButton aria-label='search' onClick={handleSearch}>\r\n             <SearchIcon />\r\n             </IconButton>\r\n             <IconButton aria-label='add card'>\r\n                <AddCircleIcon/>\r\n             </IconButton>\r\n     </form>\r\n\r\n\r\n\r\n    <Container className=\"cardInfo\">\r\n    {deckData.map((game) => {\r\n     return (\r\n    <Card className=\"card-container\" key={game._id}>\r\n     <CardMedia \r\n     className=\"CardMedia\"\r\n     component=\"img\"\r\n     alt={'Board Game'}\r\n     image={game.image_url}\r\n     height= '300'\r\n     card={game.game}\r\n     />\r\n     <CardContent>\r\n     <Typography>{game.description}</Typography>\r\n     <Typography>{game.price}</Typography>\r\n     <IconButton aria-label='edit' onClick={() => handleClickEditOpen({ game })}> <EditIcon/></IconButton>\r\n     <IconButton aria-label='delete' onClick={() => handleClickDeleteOpen({ game })}><DeleteIcon/></IconButton>\r\n     </CardContent>\r\n     </Card>\r\n    \r\n    )\r\n    \r\n     })}\r\n     </Container>\r\n\r\n     <Dialog \r\n    open={editOpen}\r\n    onClose={handleCloseEdit}\r\n    aria-labelledby='edit-dial'\r\n    >\r\n    <Formik\r\n    initialValues={{\r\n        id: selectedCard?._id, \r\n        name: selectedCard?.name, \r\n        image_url: selectedCard?.image_url, \r\n        description: selectedCard?.description, \r\n        price: selectedCard?.price \r\n    }}\r\n    validationSchema={Yup.object().shape({\r\n        id: Yup.string('Enter Game ID').required(\r\n            'Game ID is required', \r\n        ),\r\n        name: Yup.string('Enter game name').required(\r\n            'Game name is required',\r\n        ),\r\n        image_url: Yup.string('Image URL'), \r\n        description: Yup.string('Game Description'), \r\n        price: Yup.string('Game Price'), \r\n    })}\r\n    onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\r\n        try {\r\n            await handleUpdate(values) \r\n            handleCloseEdit()\r\n        }   catch (err) {\r\n            console.error(err)\r\n            setStatus({ success: false })\r\n            setErrors({ submit: err.message })\r\n            setSubmitting(false)\r\n        }\r\n    }}\r\n    >\r\n    {({\r\n        values, \r\n        errors, \r\n        touched, \r\n        handleChange, \r\n        handleBlur, \r\n        handleSubmit, \r\n        isSubmitting,\r\n    }) => (\r\n        <form \r\n        noValidate \r\n        autoComplete='off' \r\n        onSubmit={handleSubmit}\r\n        >\r\n         <DialogTitle id=\"edit-dial\">Edit Game Info</DialogTitle>   \r\n         <DialogContent>\r\n             <DialogContentText>\r\n                 Edit Information for this Game: \r\n             </DialogContentText>\r\n             <TextField \r\n            autoFocus \r\n            id=\"id\"\r\n            name=\"id\"\r\n            label=\"Game ID\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={values._id}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={Boolean(touched._id && errors._id)} \r\n            helperText={touched._id && errors._id} \r\n            />\r\n            <TextField \r\n            autoFocus \r\n            id=\"Game Name\"\r\n            name=\"Game Name\"\r\n            label=\"Game Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={values.name}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={Boolean(touched.name && errors.name)} \r\n            helperText={touched.name && errors.name} \r\n            />\r\n            <Box>\r\n                <TextField \r\n            autoFocus \r\n            id=\"image_url\"\r\n            name=\"image_url\"\r\n            label=\"Image URL\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={values.image_url}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={Boolean(touched.image_url && errors.image_url)} \r\n            helperText={touched.image_url && errors.image_url} \r\n                />\r\n            </Box>\r\n            <Box>\r\n                <TextField \r\n            autoFocus \r\n            id=\"description\"\r\n            name=\"Description\"\r\n            label=\"Game Description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={values.description}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={Boolean(touched.description && errors.description)} \r\n            helperText={touched.description && errors.description} \r\n\r\n\r\n                />\r\n            </Box>\r\n\r\n\r\n            <Box>\r\n                <TextField \r\n            autoFocus \r\n            id=\"price\"\r\n            name=\"price\"\r\n            label=\"Game Price\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            error={Boolean(touched.price && errors.price)} \r\n            helperText={touched.price && errors.price} \r\n                />\r\n            </Box>\r\n         </DialogContent>\r\n         <DialogActions>\r\n             <Button onClick={handleCloseEdit}>Cancel</Button>\r\n             <Button type='submit'>Save</Button>\r\n         </DialogActions>\r\n       \r\n        </form>\r\n    )}\r\n\r\n\r\n\r\n    </Formik>\r\n\r\n    </Dialog>\r\n\r\n\r\n\r\n\r\n    <form>\r\n     <Container>\r\n        <Dialog open={deleteOpen} onClose={handleCloseDelete}>\r\n        <DialogTitle>Delete Game</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>\r\n                Are you sure you want to delete this game?\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleCloseDelete}>Cancel</Button>\r\n            <Button onClick={handleDelete}>Delete</Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n     </Container>\r\n\r\n\r\n     </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n   </div>\r\n\r\n   </>\r\n\r\n)}\r\n  \r\nexport default PopularGames ","C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\CardGames.js",[],"C:\\Users\\Aubrey\\Documents\\reactnodefullstackapp\\client\\src\\Welcome.js",[],{"ruleId":"38","severity":1,"message":"39","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":49,"column":22,"nodeType":"40","endLine":49,"endColumn":33},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead."]